{"version":3,"file":"ng-code-verification.js","sources":["../../../projects/ng-code-verification/src/lib/code.ts","../../../projects/ng-code-verification/src/lib/codes.ts","../../../projects/ng-code-verification/src/lib/ng-code-verification.component.ts","../../../projects/ng-code-verification/src/lib/ng-code-verification.module.ts","../../../projects/ng-code-verification/src/public-api.ts","../../../projects/ng-code-verification/src/ng-code-verification.ts"],"sourcesContent":["import { FormControl, Validators } from '@angular/forms';\n\nexport default class Code {\n\n    static numberSeq = 1;\n    private pError: boolean;\n    private pFormControl: FormControl;\n    private pValue: number;\n    private pId: string;\n\n    constructor()\n    {\n        this.pFormControl = new FormControl('', Validators.required);\n        this.pId = 'field_'  + Code.numberSeq;\n        Code.numberSeq ++;\n\n        console.log('static varibale', Code.numberSeq);\n    }\n\n    /**\n     * Get Error\n     */\n    public get error(): boolean\n    {\n        return this.pError;\n    }\n\n    /**\n     * Set Error\n     */\n    public set error(value: boolean)\n    {\n        this.pError = value;\n    }\n\n    /**\n     * Get FormControl\n     */\n    public get formControl(): FormControl\n    {\n        return this.pFormControl;\n    }\n\n    /**\n     * Get Value\n     */\n    public get value(): number\n    {\n        return this.pValue;\n    }\n\n    /**\n     * Set Value\n     */\n    public set value(valueTemp: number)\n    {\n        this.pValue = valueTemp;\n    }\n\n    /**\n     * Get ID\n     */\n    public get id(): string\n    {\n        return this.pId;\n    }\n\n    \n}\n","import Code from './code';\n\nexport default class Codes {\n\n    public el: Code[];\n    public index = 0;\n\n    constructor(qtde: number)\n    {\n        this.el = Array.from({length: qtde}, () => new Code());\n    }\n\n    next(evt): void\n    {\n        const idEl = parseInt(evt.srcElement.id.split('_')[1], 0);\n\n        // update value\n        this.el[idEl - 1].value = evt.target.value;\n\n        const nextEl = idEl < this.el.length ? (idEl + 1) : this.el.length;\n        const el = document.getElementById('field_' + nextEl) as HTMLInputElement;\n        el.focus();\n\n        if (nextEl < this.el.length){\n            el.value = '';\n        }\n    }\n\n    getArrayCodes(): string[]\n    {\n        return this.el.map(elTemp => elTemp.value ? elTemp.value.toString() : '');\n    }\n\n    getCode(): string\n    {\n        return this.getArrayCodes().join('');\n    }\n\n    validCodes(): boolean\n    {\n        const errors = this.el.map(elTemp => !elTemp.value ? false : true);\n        let valid = true;\n        errors.forEach((value, index) => {\n            if (!value)\n            {\n                this.setError(index + 1, true);\n                valid = false;\n            }\n            else {\n                this.setError(index + 1, false);\n            }\n        });\n\n        return valid;\n    }\n\n    setError(idTemp, value): void\n    {\n        this.el[idTemp - 1].error = value;\n    }\n\n}\n","import { Component, OnInit, Input, ViewChildren, QueryList, ElementRef, Output, EventEmitter } from '@angular/core';\nimport Codes from './codes';\n\n@Component({\n  selector: 'ng-code-verification',\n  template: `\n    <div #formCode>\n      <input\n        type=\"text\"\n        maxlength=\"1\"\n        class=\"codeInput\"\n        *ngFor=\"let codeTemp of codes.el\"\n        [formControl]=\"codeTemp.formControl\"\n        [id]=\"codeTemp.id\"\n        (input)=\"onInput($event)\"\n        [class.is-invalid]=\"codeTemp.error\"\n        maxlength=\"1\"\n      />\n    </div>\n  `,\n  styleUrls: ['./ng-code-verification.css']\n})\nexport class NgCodeVerificationComponent implements OnInit {\n\n  @ViewChildren('formCode') formCode: QueryList<ElementRef>;\n  @Output() codeComplete = new EventEmitter<{ code: string, valid: boolean}>();\n  @Input() codeTotal = 0;\n  codes: Codes;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.codes = new Codes(this.codeTotal);\n  }\n\n  onInput(evt): void\n  {\n    this.codes.next(evt);\n    this.onCodeCompleted();\n\n    if (this.checkIfLast(evt))\n    {\n      this.onCodeCompleted();\n    }\n  }\n\n  public checkIfLast(evt): boolean\n  {\n    const id = parseInt(evt.srcElement.id.split('_')[1], 0);\n    return id >= this.codes.el.length ? true : false;\n  }\n\n  public onCodeCompleted(): void\n  {\n    this.codeComplete.emit(\n      {\n        code: this.codes.getCode(), \n        valid: this.codes.validCodes()\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgCodeVerificationComponent } from './ng-code-verification.component';\n\n\n\n@NgModule({\n  declarations: [NgCodeVerificationComponent],\n  imports: [\n    BrowserModule\n  ],\n  exports: [NgCodeVerificationComponent]\n})\nexport class NgCodeVerificationModule { }\n","/*\n * Public API Surface of ng-code-verification\n */\n\nexport * from './lib/ng-code-verification.component';\nexport * from './lib/ng-code-verification.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}